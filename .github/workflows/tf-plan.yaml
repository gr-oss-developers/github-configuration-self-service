name: Terraform Plan

on:
  workflow_call:
    inputs:
      commit_sha:
        type: string
        description: 'The commit SHA to promote'
        required: true
      gcss_ref:
        type: string
        description: "GCSS ref to checkout"
        required: false
        default: "main"
    secrets:
      app_private_key:
        required: true
      gh_token:
        required: true
      tfc_token:
        required: true

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    environment: promote
    permissions:
      pull-requests: write
    steps:
#      - name: Generate a token
#        uses: actions/create-github-app-token@v2
#        id: generate-token
#        with:
#          app-id: ${{ vars.APP_ID }}
#          private-key: ${{ secrets.app_private_key }}
#          owner: "gr-oss-developers"
#
#      - name: Checkout GCSS
#        uses: actions/checkout@v4
#        with:
#          repository: gr-oss-developers/github-configuration-self-service
#          ref: ${{ inputs.gcss_ref }}
#          persist-credentials: false
      - name: Debug
        env:
          TOKEN: ${{ secrets.gh_token }}
        run: |
          curl -H "Authorization: token $TOKEN" https://api.github.com/repos/gr-oss-developers/gr-oss-developers-gcss-config

      - name: Checkout configuration repo
        uses: actions/checkout@v4
        with:
          path: feature/github-repo-provisioning/gcss_config
          ref: ${{ inputs.commit_sha }}
          token: ${{ secrets.gh_token }}

#      - name: Copy GH app mapping
#        run: cp feature/github-repo-importer/app-list.yaml feature/github-repo-provisioning/app-list.yaml
#
#      - name: Setup Terraform
#        uses: hashicorp/setup-terraform@v3
#        with:
#          cli_config_credentials_token: ${{ secrets.tfc_token }}
#
#      - name: Run Terraform init
#        working-directory: feature/github-repo-provisioning
#        run: terraform init -input=false
#        env:
#          TF_CLOUD_ORGANIZATION: "GR-OSS"
#          TF_WORKSPACE: ${{ vars.WORKSPACE }}
#
#      - name: Run Terraform plan
#        id: plan
#        working-directory: feature/github-repo-provisioning
#        env:
#          TF_CLOUD_ORGANIZATION: "GR-OSS"
#          TF_WORKSPACE: ${{ vars.WORKSPACE }}
#        run: terraform plan -no-color -input=false
